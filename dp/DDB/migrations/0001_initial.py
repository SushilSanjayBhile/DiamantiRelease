# Generated by Django 2.2.7 on 2019-12-18 11:23

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AGGREGATE_TC_STATE',
            fields=[
                ('DomainName', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('TotalTcs', models.IntegerField()),
                ('AutomatedTcs', models.IntegerField()),
                ('TestedTcs', models.IntegerField()),
                ('PassedTcs', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='FEATURES',
            fields=[
                ('JiraID', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('TestedStaus', models.CharField(max_length=3)),
                ('Reason', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RELEASES',
            fields=[
                ('ReleaseNumber', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('BuildNumberList', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=11), size=None)),
                ('HardwareSupport', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), size=None)),
                ('CardType', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), size=None)),
                ('ServerType', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), size=None)),
                ('SetupsUsed', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), size=None)),
                ('QAStartDate', models.DateTimeField()),
                ('TargetedReleaseDate', models.DateTimeField()),
                ('ActualReleaseDate', models.DateTimeField()),
                ('TargetedCodeFreezeDate', models.DateTimeField()),
                ('UpgradeTestingStartDate', models.DateTimeField()),
                ('UpgradeMetrics', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), blank=True, size=None)),
                ('Customers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), size=None)),
                ('FinalBuild', models.CharField(blank=True, max_length=10)),
                ('FinalOS', models.CharField(blank=True, max_length=10)),
                ('FinalDockerCore', models.CharField(blank=True, max_length=10)),
                ('UbootVersion', models.CharField(blank=True, max_length=100)),
                ('RedFlagsRisks', models.TextField(blank=True)),
                ('AutomationSyncUp', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='TC_INFO',
            fields=[
                ('TcID', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('TcName', models.CharField(blank=True, max_length=2000)),
                ('Domain', models.CharField(blank=True, max_length=50)),
                ('SubDomain', models.CharField(max_length=50)),
                ('Scenario', models.CharField(blank=True, max_length=200)),
                ('Description', models.TextField()),
                ('ExpectedBehaviour', models.CharField(blank=True, max_length=5000)),
                ('Notes', models.CharField(blank=True, max_length=1000)),
                ('CardType', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('BOS', 'BOS'), ('NYNJ', 'NYNJ'), ('COMMON', 'COMMON'), ('OS', 'OS')], default=None, max_length=10), size=None)),
                ('ServerType', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('Dell', 'Dell'), ('Intel', 'Intel'), ('HP', 'HP'), ('Lenovo', 'Lenovo'), ('UNKNOWN', 'UNKNOWN')], default=None, max_length=10), size=None)),
                ('OrchestrationPlatform', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('oc-k8s', 'oc-k8s'), ('dcx-k8s', 'dcx-k8s')], max_length=10), size=None)),
                ('Status', models.CharField(blank=True, choices=[('UNDERWORK', 'UNDERWORK'), ('ASSIGNED', 'ASSIGNED'), ('COMPLETED', 'COMPLETED'), ('NA', 'NA')], max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='USER_INFO',
            fields=[
                ('UserId', models.IntegerField(primary_key=True, serialize=False)),
                ('UserName', models.CharField(max_length=50)),
                ('Designation', models.CharField(max_length=20)),
                ('Permission', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='WORKSHEET',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Timestamp', models.CharField(max_length=25)),
                ('Work', models.TextField()),
                ('Release', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DDB.RELEASES')),
                ('UserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DDB.USER_INFO')),
            ],
        ),
        migrations.CreateModel(
            name='TC_STATUS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Build', models.CharField(max_length=20)),
                ('Result', models.CharField(blank=True, max_length=14)),
                ('Bugs', models.CharField(blank=True, max_length=10)),
                ('Date', models.DateField(auto_now_add=True)),
                ('TcID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tcid', to='DDB.TC_INFO')),
            ],
        ),
        migrations.CreateModel(
            name='SETUP_INFO',
            fields=[
                ('SetupName', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('Inventory', models.CharField(max_length=5000)),
                ('ClusterState', models.CharField(choices=[('Failed', 'Failed'), ('Good', 'Good')], max_length=6)),
                ('ClusterStatus', models.CharField(choices=[('Idle', 'Idle'), ('In-use', 'In-Use')], max_length=6)),
                ('CurrentUserId', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='User', to='DDB.USER_INFO')),
                ('OwnerId', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Owner', to='DDB.USER_INFO')),
            ],
        ),
        migrations.CreateModel(
            name='SANITY_RESULTS',
            fields=[
                ('SanityId', models.AutoField(primary_key=True, serialize=False)),
                ('Tag', models.CharField(choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Sanity', 'Sanity')], default='Daily', max_length=6)),
                ('Build', models.CharField(max_length=10)),
                ('Result', models.CharField(choices=[('Pass', 'Pass'), ('Fail', 'Fail')], max_length=10)),
                ('Logs', models.TextField()),
                ('Timestamp', models.DateField()),
                ('Setup', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DDB.SETUP_INFO')),
            ],
        ),
        migrations.CreateModel(
            name='LOGS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Timestamp', models.DateTimeField()),
                ('RequestType', models.CharField(max_length=10)),
                ('Logs', models.TextField()),
                ('Link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='DDB.LOGS')),
                ('UserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DDB.USER_INFO')),
            ],
        ),
    ]
